# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
    paths-ignore:
      - 'README.org'
      - 'Notes/*'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.org'
      - 'Notes/*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

########################################################################
## CONFIGURATION
##
## See SETTINGS for the most important configuration variable: AGDA_BRANCH.
## It has to be defined as a build step because it is potentially branch
## dependent.
##
## As for the rest:
##
## Basically do not touch GHC_VERSION and CABAL_VERSION as long as
## they aren't a problem in the build. If you have time to waste, it
## could be worth investigating whether newer versions of ghc produce
## more efficient Agda executable and could cut down the build time.
## Just be aware that actions are flaky and small variations are to be
## expected.
##
## The CABAL_INSTALL variable only passes `-O1` optimisations to ghc
## because github actions cannot currently handle a build using `-O2`.
## To be experimented with again in the future to see if things have
## gotten better.
##
########################################################################

########################################################################
## SETTINGS
##
## AGDA_BRANCH picks the branch of Agda to use to build the library.
## It doesn't really track the branch, so you have to drop caches to
## get a new branch version if it changes. This will be fixed in the
## next PR.
########################################################################

env:
  AGDA_BRANCH: v2.7.0.1
  GHC_VERSION: 9.8.2
  CABAL_VERSION: 3.10.2.1
  CABAL_INSTALL: cabal install --overwrite-policy=always --ghc-options='-O1 +RTS -M6G -RTS'
  CUBICAL_COMMIT : ccd592db1df4f2304463d89e61b81eeb88f68c22
  CACHE_PATHS: |
    ~/.cabal/packages
    ~/.cabal/store
    ~/.cabal/bin
    ~/.agda
    ~/cubical


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  compile-agda:
    runs-on: ubuntu-latest
    steps:
      - name: Install cabal
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ env.GHC_VERSION }}
          cabal-version: ${{ env.CABAL_VERSION }}
          cabal-update: true

      - name: Restore external dependencies cache
        uses: actions/cache/restore@v3
        id: cache-external-restore
        with:
          path: ${{ env.CACHE_PATHS }}
          key: ${{ runner.os }}-${{ env.GHC_VERSION }}-${{ env.CABAL_VERSION }}-${{ env.AGDA_BRANCH }}-${{ env.CUBICAL_COMMIT }}

      ########################################################################
      ## INSTALLATION STEPS
      ########################################################################

      - name: Download and install fix-whitespace
        if: steps.cache-external-restore.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/agda/fix-whitespace --depth=1
          cd fix-whitespace
          ${{ env.CABAL_INSTALL }} fix-whitespace.cabal
          cd ..

      - name: Download and install Agda from github
        if: steps.cache-external-restore.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/agda/agda --branch ${{ env.AGDA_BRANCH }} --depth=1
          cd agda
          mkdir -p doc
          touch doc/user-manual.pdf
          ${{ env.CABAL_INSTALL }}
          cd ..
          rm -rf agda

      - name: Download Cubical from github
        if: steps.cache-external-restore.outputs.cache-hit != 'true'
        run : |
          cd ~
          git clone https://github.com/agda/cubical --branch master
          cd cubical
          git checkout ${{ env.CUBICAL_COMMIT }}
          cd ..
          echo "CUBICAL_DIR=$PWD/cubical" >> "$GITHUB_ENV"

      - name: Set up Agda dependencies
        if: steps.cache-external-restore.outputs.cache-hit != 'true'
        run : |
          mkdir ~/.agda
          touch ~/.agda/libraries
          echo "$CUBICAL_DIR/cubical.agda-lib" >> ~/.agda/libraries
          echo "$GITHUB_WORKSPACE/cubical-categorical-logic.agda-lib" >> ~/.agda/libraries

      - name: Save external dependencies cache
        if: steps.cache-external-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        id: cache-external-save
        with:
          path: ${{ env.CACHE_PATHS }}
          key: ${{ steps.cache-external-restore.outputs.cache-primary-key }}

      ########################################################################
      ## CHECKOUT
      ########################################################################

      # By default github actions do not pull the repo
      - name: Checkout cubical-categorical-logic
        uses: actions/checkout@v3

      ########################################################################
      ## TESTING
      ########################################################################

      - name: Restore Cubical Categorical Logic library cache
        uses: actions/cache/restore@v3
        id: cache-library-restore
        with:
          path: ./_build
          key: CubicalCategoricalLogicLibrary-${{ runner.os }}-${{ env.GHC_VERSION }}-${{ env.CABAL_VERSION }}-${{ env.AGDA_BRANCH }}-${{ env.CUBICAL_COMMIT }}-${{ hashFiles('Everythings.hs' , 'Cubical/**', 'cubical-categorical-logic.agda-lib') }}
          restore-keys: |
            CubicalCategoricalLogicLibrary-${{ runner.os }}-${{ env.GHC_VERSION }}-${{ env.CABAL_VERSION }}-${{ env.AGDA_BRANCH }}-${{ env.CUBICAL_COMMIT }}-

      - name: Restore Cubical library cache
        uses: actions/cache/restore@v3
        id: cache-cubical-library-restore
        with:
          path: ~/cubical/_build
          key: CubicalLibrary-${{ runner.os }}-${{ env.GHC_VERSION }}-${{ env.CABAL_VERSION }}-${{ env.AGDA_BRANCH }}-${{ env.CUBICAL_COMMIT }}-${{ hashFiles('~/cubical/cubical/**', '~/cubical/cubical.agda-lib') }}
          restore-keys: |
            CubicalLibrary-${{ runner.os }}-${{ env.GHC_VERSION }}-${{ env.CABAL_VERSION }}-${{ env.AGDA_BRANCH }}-${{ env.CUBICAL_COMMIT }}-

      - name: Put cabal programs in PATH
        run: echo "~/.cabal/bin" >> $GITHUB_PATH

      - name: Test cubical-categorical-logic
        run: |
          make test \
            AGDA_EXEC='~/.cabal/bin/agda +RTS -M6G -RTS -WnoUnsupportedIndexedMatch -W error' \
            FIX_WHITESPACE='~/.cabal/bin/fix-whitespace'

      - name: Save library cache
        if: steps.cache-library-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        id: cache-library-save
        with:
          path: ./_build
          key: ${{ steps.cache-library-restore.outputs.cache-primary-key }}

      - name: Save Cubical library cache
        if: steps.cache-cubical-library-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        id: cache-cubical-library-save
        with:
          path: ~/cubical/_build
          key: ${{ steps.cache-cubical-library-restore.outputs.cache-primary-key }}
